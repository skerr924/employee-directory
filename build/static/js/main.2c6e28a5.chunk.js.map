{"version":3,"sources":["components/Jumbotron/index.js","components/Wrapper/index.js","components/Footer/index.js","components/EmployeeRow/index.js","components/Table/index.js","components/DataArea/index.js","utils/API.js","App.js","index.js"],"names":["Jumbotron","className","Wrapper","props","children","Footer","EmployeeRow","alt","last","src","image","first","phone","gender","email","Table","state","sortedEmployees","employees","sortLastNameAZ","sortedList","empList","sort","a","b","nameA","name","toLowerCase","nameB","setState","sortLastNameZA","sortFirstNameAZ","sortFirstNameZA","this","prevProps","class","onClick","length","map","item","picture","large","Component","DataArea","searchValue","employeesMatchSearch","handleInputChange","event","target","value","inputValue","matching","filter","indexOf","onChange","type","placeholder","axios","get","App","API","then","res","data","results","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c6e28a5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron bg-dark text-white\">\n      <h1 className=\"display-4\">Employee Directory</h1>\n      <p className=\"lead\">\n        Search by name, gender, or email in the search bar below, or sort by\n        first or last name using the arrow keys.\n      </p>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\">{props.children}</main>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Employee Directory, 2020</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"../EmployeeRow/style.css\";\n\nfunction EmployeeRow(props) {\n  return (\n    <tr>\n      <td>\n        <img alt={props.last} src={props.image}></img>\n      </td>\n      <td>{props.first}</td>\n      <td>{props.last}</td>\n      <td>{props.phone}</td>\n      <td>{props.gender}</td>\n      <td>{props.email}</td>\n    </tr>\n  );\n}\n\nexport default EmployeeRow;\n","import React, { Component } from \"react\";\nimport EmployeeRow from \"../EmployeeRow\";\nimport \"../Table/style.css\";\n\nclass Table extends Component {\n  state = {\n    sortedEmployees: [],\n    employees: [],\n  };\n\n  componentDidMount() {\n    this.setState({\n      sortedEmployees: this.props.empList,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.empList !== prevProps.empList) {\n      this.setState({\n        sortedEmployees: this.props.empList,\n      });\n    }\n  }\n\n  sortLastNameAZ = () => {\n    let sortedList = [];\n    sortedList = this.props.empList.sort((a, b) => {\n      var nameA = a.name.last.toLowerCase();\n      var nameB = b.name.last.toLowerCase();\n      if (nameA < nameB) return -1;\n      if (nameA > nameB) return 1;\n      return 0;\n    });\n    this.setState({\n      sortedEmployees: sortedList,\n    });\n  };\n\n  sortLastNameZA = () => {\n    let sortedList = [];\n    sortedList = this.props.empList.sort((a, b) => {\n      var nameA = a.name.last.toLowerCase();\n      var nameB = b.name.last.toLowerCase();\n      if (nameA > nameB) return -1;\n      if (nameA < nameB) return 1;\n      return 0;\n    });\n    this.setState({\n      sortedEmployees: sortedList,\n    });\n  };\n\n  sortFirstNameAZ = () => {\n    let sortedList = [];\n    sortedList = this.props.empList.sort((a, b) => {\n      var nameA = a.name.first.toLowerCase();\n      var nameB = b.name.first.toLowerCase();\n      if (nameA < nameB) return -1;\n      if (nameA > nameB) return 1;\n      return 0;\n    });\n    this.setState({\n      sortedEmployees: sortedList,\n    });\n  };\n\n  sortFirstNameZA = () => {\n    let sortedList = [];\n    sortedList = this.props.empList.sort((a, b) => {\n      var nameA = a.name.first.toLowerCase();\n      var nameB = b.name.first.toLowerCase();\n      if (nameA > nameB) return -1;\n      if (nameA < nameB) return 1;\n      return 0;\n    });\n    this.setState({\n      sortedEmployees: sortedList,\n    });\n  };\n\n  render() {\n    return (\n      <table>\n        <thead>\n          <th>Photo</th>\n          <th class=\"nameButton\">\n            <button\n              class=\"arrowBtn btn btn-light\"\n              onClick={this.sortFirstNameAZ}\n            >\n              ↓\n            </button>\n            First Name\n            <button\n              class=\"arrowBtn btn btn-light\"\n              onClick={this.sortFirstNameZA}\n            >\n              ↑\n            </button>\n          </th>\n          <th class=\"nameButton\">\n            <button\n              class=\"arrowBtn btn btn-light\"\n              onClick={this.sortLastNameAZ}\n            >\n              ↓\n            </button>\n            Last Name\n            <button\n              class=\"arrowBtn btn btn-light\"\n              onClick={this.sortLastNameZA}\n            >\n              ↑\n            </button>\n          </th>\n          <th>Phone</th>\n          <th>Gender</th>\n          <th>Email</th>\n        </thead>\n        <tbody>\n          {this.state.sortedEmployees.length > 0 &&\n            this.state.sortedEmployees.map((item) => (\n              <EmployeeRow\n                image={item.picture.large}\n                first={item.name.first}\n                last={item.name.last}\n                email={item.email}\n                phone={item.phone}\n                gender={item.gender}\n              />\n            ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport Table from \"../Table\";\nimport \"../DataArea/style.css\";\n\nclass DataArea extends Component {\n  state = {\n    searchValue: \"\",\n    employeesMatchSearch: [],\n  };\n\n  componentDidMount() {\n    if (this.state.employeesMatchSearch.length < 1) {\n      this.setState({\n        employeesMatchSearch: this.props.employees,\n      });\n    }\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      searchValue: event.target.value,\n    });\n    let inputValue = event.target.value;\n    const matching = this.props.employees.filter((item) => {\n      let values = item.name.first + item.name.last + item.gender + item.email;\n      return values.indexOf(inputValue) !== -1;\n    });\n\n    this.setState({\n      employeesMatchSearch: matching,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className=\"form\">\n          <input\n            className=\"mainSearch\"\n            value={this.state.searchValue}\n            name=\"searchValue\"\n            onChange={(event) => this.handleInputChange(event)}\n            type=\"text\"\n            placeholder=\"Search for an employee\"\n          />\n        </form>\n        {this.state.employeesMatchSearch.length > 0 && (\n          <Table empList={this.state.employeesMatchSearch} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DataArea;\n","import axios from \"axios\";\n\n// Export an object containing the search method to pull 50 users,\n// including their name, email, and photo\nexport default {\n  fetchUsers: function () {\n    return axios.get(\n      \"https://randomuser.me/api/?results=50&nat=us&inc=id,name,email,gender,phone,picture\"\n    );\n  },\n};\n","import React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Wrapper from \"./components/Wrapper\";\nimport Footer from \"./components/Footer\";\nimport DataArea from \"./components/DataArea\";\nimport API from \"./utils/API\";\n\nclass App extends Component {\n  state = {\n    employees: [],\n  };\n\n  componentDidMount() {\n    API.fetchUsers().then((res) => {\n      this.setState({ employees: res.data.results });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Jumbotron />\n        <Wrapper>\n          {this.state.employees.length > 0 && (\n            <DataArea employees={this.state.employees} />\n          )}\n        </Wrapper>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}